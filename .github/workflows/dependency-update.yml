name: Dependency Update Check

on:
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check for security vulnerabilities
      run: |
        npm audit --audit-level moderate
        if [ $? -ne 0 ]; then
          echo "Security vulnerabilities found. Please run 'npm audit fix'."
          exit 1
        fi
        
    - name: Check for outdated dependencies
      run: npm outdated || true
      
    - name: Test with latest dependencies
      run: |
        npm update
        npm run build
        npm run test:api-format
        npm run test:unit
        
    - name: Create issue if vulnerabilities found
      uses: actions/github-script@v7
      if: failure()
      with:
        script: |
          const { context } = require('@actions/github');
          
          const issueTitle = `ðŸš¨ Security vulnerabilities or dependency issues found - ${new Date().toISOString().split('T')[0]}`;
          const issueBody = `
          ## Security/Dependency Check Failed
          
          The weekly dependency check has found issues that need attention.
          
          ### Action Required
          1. Run \`npm audit\` to see detailed vulnerability report
          2. Run \`npm audit fix\` to automatically fix issues where possible
          3. Run \`npm outdated\` to check for outdated packages
          4. Test the API format validation after updates: \`npm run test:api-format\`
          
          ### Critical Tests
          Ensure these tests still pass after any updates:
          - \`npm run test:api-format\` - Validates ElevenLabs API request format
          - \`npm run test:unit\` - Unit test suite
          - \`npm run build\` - TypeScript compilation
          
          ### Workflow Run
          Failed run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          `;
          
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: issueTitle,
            body: issueBody,
            labels: ['security', 'dependencies', 'maintenance']
          });